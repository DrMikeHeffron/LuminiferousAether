// Test of IteratedFunctionSystem class.

use IteratedFunctionSystem.frink

// Bourke Tree
//               a       b       c       d       e       f    p
Bourke = [[ 0.1950,-0.4880, 0.3440, 0.4430, 0.4431, 0.2452, 0.2],
          [ 0.4620, 0.4140,-0.2520, 0.3610, 0.2511, 0.5692, 0.2],
          [-0.6370, 0.0000, 0.0000, 0.5010, 0.8562, 0.2512, 0.2],
          [-0.0350, 0.0700,-0.4690, 0.0220, 0.4884, 0.5069, 0.2],
          [-0.0580,-0.0470, 0.4530,-0.1110, 0.5976, 0.0969, 0.2]]

// Chaos: (<) left, (^) top, (>) right, (v) bottom, (-) center ... of letter
//               a          b          c          d      e      f       p
Chaos=[[ 0.0000000, 0.0530000,-0.4290000, 0.0000000,-7.083, 5.430, 0.0526],//<C
       [ 0.1430000, 0.0000000, 0.0000000,-0.0530000,-5.619, 8.513, 0.0526],//^C
       [ 0.1430000, 0.0000000, 0.0000000, 0.0830000,-5.619, 2.057, 0.0527],//vC
       [ 0.0000000, 0.0530000, 0.4290000, 0.0000000,-3.952, 5.430, 0.0526],//<H
       [ 0.1190000, 0.0000000, 0.0000000, 0.0530000,-2.555, 4.536, 0.0526],//-H
       [-0.0123806,-0.0649723, 0.4238190, 0.0018980,-1.226, 5.235, 0.0527],//>H
       [ 0.0852291, 0.0506328, 0.4204490, 0.0156626,-0.421, 4.569, 0.0526],//<A
       [ 0.1044320, 0.0052912, 0.0570516, 0.0527352, 0.976, 8.113, 0.0526],//^A
       [-0.0081419,-0.0417935, 0.4239220, 0.0041597, 1.934, 5.370, 0.0527],//>A
       [ 0.0930000, 0.0000000, 0.0000000, 0.0530000, 0.861, 4.536, 0.0526],//-A
       [ 0.0000000, 0.0530000,-0.4290000, 0.0000000, 2.447, 5.430, 0.0526],//<O
       [ 0.1190000, 0.0000000, 0.0000000,-0.0530000, 3.363, 8.513, 0.0527],//^O
       [ 0.1190000, 0.0000000, 0.0000000, 0.0530000, 3.363, 1.487, 0.0526],//vO
       [ 0.0000000, 0.0530000, 0.4290000, 0.0000000, 3.972, 4.569, 0.0526],//>O
       [ 0.1239980,-0.0018396, 0.0006912, 0.0629731, 6.275, 7.716, 0.0527],//^S
       [ 0.0000000, 0.0530000, 0.1670000, 0.0000000, 5.215, 6.483, 0.0526],//<S
       [ 0.0710000, 0.0000000, 0.0000000, 0.0530000, 6.279, 5.298, 0.0526],//-S
       [ 0.0000000,-0.0530000,-0.2380000, 0.0000000, 6.805, 3.714, 0.0527],//>S
       [-0.1210000, 0.0000000, 0.0000000, 0.0530000, 5.941, 1.487, 0.0526]]//vS

// Fern
//           a      b      c     d    e     f     p
Fern = [[ 0.00,  0.00,  0.00, 0.16, 0.0, 0.00, 0.01],
        [ 0.85,  0.04, -0.04, 0.85, 0.0, 1.60, 0.85],
        [ 0.20, -0.26,  0.23, 0.22, 0.0, 1.60, 0.07],
        [-0.15,  0.28,  0.26, 0.24, 0.0, 0.44, 0.07]]

// Galaxy
//             a     b      c      d      e      f     p
Galaxy = [[-0.08, 0.06,  0.00, -0.28, -2.02, -2.40, 0.05],
          [-0.05, 0.20, -0.03, -0.21, -1.51, -3.46, 0.05],
          [-0.05, 0.23, -0.05, -0.20,  2.04,  2.47, 0.05],
          [-0.01, 0.30, -0.05, -0.04,  0.67,  3.18, 0.05],
          [ 0.70, 0.52, -0.53,  0.69,  0.54,  0.14, 0.80]]

// Maple Leaf
//               a      b      c     d      e      f     p
MapleLeaf = [[0.14,  0.01,  0.00, 0.51, -0.08, -1.31, 0.10],
             [0.43,  0.52, -0.45, 0.50,  1.49, -0.75, 0.35],
             [0.45, -0.49,  0.47, 0.47, -1.62, -0.74, 0.35],
             [0.49,  0.00,  0.00, 0.51,  0.02,  1.62, 0.20]]

// Sierpinski Triangle (p-adic fans take note!)
//             a    b    c    d     e     f     p
Triangle = [[0.5, 0.0, 0.0, 0.5,  1.0,  1.0, 0.33],
            [0.5, 0.0, 0.0, 0.5,  1.0, 50.0, 0.33],
            [0.5, 0.0, 0.0, 0.5, 50.0, 50.0, 0.34]]

// Spiral
//              a       b       c       d       e      f    p
Spiral = [[0.7517,-0.2736, 0.2736, 0.7517, 0.0000, 0.000, 0.7],
          [0.2000, 0.0000, 0.0000, 0.2000, 1.0000,-0.364, 0.1],
          [0.2000, 0.0000, 0.0000, 0.2000,-0.3640, 1.000, 0.1],
          [0.2000, 0.0000, 0.0000, 0.2000,-0.7280,-0.728, 0.1]]

// Vortex
//               a       b       c       d        e       f       p
Vortex = [[ 0.4426,-0.8411, 0.7244, 0.5387, 14.9191, 9.3286, 0.9127],
          [-0.4242,-0.0652,-0.1758,-0.2182,  3.8096, 6.7415, 0.0873]]

whichTest = ""

do
{
   whichTest = input["Run what test ?\n b = Bourke tree, c = chaos, f = fern, o = order,\n m = maple leaf, s = spiral, t = triangle, v = vortex, OK = exit (add F to generate a file)"]

   if uppercase[whichTest]=="B"
      g = drawIFS["BourkeTree", Bourke, 60]
   if uppercase[whichTest]=="BF"
      g = drawIFS["BourkeTree", Bourke, 60, true]
   if uppercase[whichTest]=="C"
      g = drawIFS["Chaos", Chaos, 60]
   if uppercase[whichTest]=="CF"
      g = drawIFS["Chaos", Chaos, 60, true]
   if uppercase[whichTest]=="F"
      g = drawIFS["Fern", Fern, 40]
   if uppercase[whichTest]=="FF"
      g = drawIFS["Fern", Fern, 120, true]
      if uppercase[whichTest]=="G"
      g = drawIFS["Galaxy", Galaxy, 40]
   if uppercase[whichTest]=="GF"
      g = drawIFS["Galaxy", Galaxy, 120, true]
   if uppercase[whichTest]=="M"
      g = drawIFS["Maple Leaf", MapleLeaf, 100]
   if uppercase[whichTest]=="MF"
      g = drawIFS["Maple Leaf", MapleLeaf, 100, true]
   if uppercase[whichTest]=="O"
      g = drawIFS["Order", Order, 30]
   if uppercase[whichTest]=="OF"
      g = drawIFS["Order", Order, 30, true]
   if uppercase[whichTest]=="S"
      g = drawIFS["Spiral", Spiral, 30]
   if uppercase[whichTest]=="SF"
      g = drawIFS["Spiral", Spiral, 30, true]
   if uppercase[whichTest]=="T"
      g = drawIFS["SierpinskiTriangle", Triangle, 50]
   if uppercase[whichTest]=="TF"
      g = drawIFS["SierpinskiTriangle", Triangle, 200, true]
   if uppercase[whichTest]=="V"
      g = drawIFS["Vortex", Vortex, 50]
   if uppercase[whichTest]=="VF"
      g = drawIFS["Vortex", Vortex, 100, true]
   if whichTest==""
      whichTest = "X"
} while (uppercase[whichTest] != "X")